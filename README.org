
#                                             __                  
#                                 __         /\ \                 
#                ____    ___ ___ /\_\    ____\ \ \___   __  __    
#               /',__\ /' __` __`\/\ \  /',__\\ \  _ `\/\ \/\ \   
#              /\__, `\/\ \/\ \/\ \ \ \/\__, `\\ \ \ \ \ \ \_\ \  
#              \/\____/\ \_\ \_\ \_\ \_\/\____/ \ \_\ \_\/`____ \ 
#               \/___/  \/_/\/_/\/_/\/_/\/___/   \/_/\/_/`/___/> \
#                                                           /\___/
#                                                           \/__/ 
#       __                     __         ___  ___                         
#      /\ \__                 /\ \      /'___\/\_ \                        
#      \ \ ,_\    __      ____\ \ \/'\ /\ \__/\//\ \     ___   __  __  __  
#       \ \ \/  /'__`\   /',__\\ \ , < \ \ ,__\ \ \ \   / __`\/\ \/\ \/\ \ 
#        \ \ \_/\ \L\.\_/\__, `\\ \ \\`\\ \ \_/  \_\ \_/\ \L\ \ \ \_/ \_/ \
#         \ \__\ \__/.\_\/\____/ \ \_\ \_\ \_\   /\___ \ \____/\ \___x___/'
#          \/__/\/__/\/_/\/___/   \/_/\/_/\/_/   \/____/\/___/  \/__//__/  
                                                                          

* VERSION
  - v1.0.1

* README
  Smishy taskflow is an attempt at GTD (getting things done) running on emacs with org-mode. It's meant to be very simple, very quick and completely out of the way. Ideally it is switched into view, interacted with, and switched away. This is an attempt at mechanising the 'working process'. 

  I've found it incredibly useful - Hope you do too :)

* INSTALLATION

  NOTE: This is currently not a 'release' candidate. It works, but needs some more work

  Installation is easy though you'll have to rely on your window manager to bind keys to open the taskflow frame. This is how I set it up to use its own emacs instance.

  1. Clone this repo somewhere, I personally would put it in ~/.emacs.d/vendor/smishy-taskflow

  2. Create your config file. I personally put it in ~/.emacs.d/smishy-taskflow-init.el. You can use sample-init.el as an example for how to create the initialiser. Set the argument to smishy-start-taskflow to the path of your todo list (it shoud be a .org file, you can use example-list.org to get an idea).

  3. Edit smishy-taskflow-open.sh and set the variable "config_location" to the full path of the new initialiser file. I use ~/.emacs.d/smishy-taskflow-init.el

  4. Key bind smishy-taskflow-open.sh to some key combo in your window manager (I use the M-~)

* USAGE
  ### NOTE ###
  I'll be creating a usage video soon because this list doesn't do the process justice. It's really quick and nice, imho.

** STEP 1 - Adding Actionable Items
   I'll be working, then I'll receive some instructions/mail or have a thought etc.
   
   At this point I open the taskflow, press C-c c to make new DO (or Next Step) and fill it in with an actionable next step and type C-c c again to make it
   into a TODO. At this point I'll use org-mode's [#A] [#B] etc priorities, set up the scheduling or deadline and move it into a new or existing PROJECT

   Projects are made easily, just like
   * PROJECT project-name
   and you can tag projects with C-c C-c. This is really useful for the next step.

   At this point, once I've used C-c c a bunch to add items, date them, organise them as per standard org-mode methods I'll do C-c s to save and close the emacs frame.

** STEP 2 - Reviewing Actionable Items To Do Work
   
   I open the taskflow again using my keyboard shortcuts and review what needs doing with C-c h, C-c t or C-c n. You can customise these keybinds, they work for me.

   C-c h is by far the most useful and shows me a 1 week calendar along with pending tasks and done tasks. I'll pick the next task that needs doing and close the emacs frame. Once it's done I'll reopen the frame, navigate to it by pressing n or p to up or down, and tab to navigate to it in my actual list. From here I C-c d to mark it as done, pick the next task, and repeat.

* CONTACT
  ssaj.work@gmail.com

* GIT
  https://github.com/quazimodo
* LICENSE
  LGPL3
  
  Copyright quazimodo 2013
  
  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 3 of the License, or (at your option) any later
  version.
  
  This library is distributed in the hope that it will be
  useful, but WITHOUT ANY WARRANTY; without even the implied
  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  PURPOSE.  See the GNU Lesser General Public License for more
  details.
  
  You should have received a copy of the  GNU Lesser General
  Public License along with this library.
  If not, see <http://www.gnu.org/licenses/>.
