#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/org.css" />
#                                            __                  
#                                __         /\ \                 
#               ____    ___ ___ /\_\    ____\ \ \___   __  __    
#              /',__\ /' __` __`\/\ \  /',__\\ \  _ `\/\ \/\ \   
#             /\__, `\/\ \/\ \/\ \ \ \/\__, `\\ \ \ \ \ \ \_\ \  
#             \/\____/\ \_\ \_\ \_\ \_\/\____/ \ \_\ \_\/`____ \ 
#              \/___/  \/_/\/_/\/_/\/_/\/___/   \/_/\/_/`/___/> \
#                                                          /\___/
#                                                          \/__/ 
#      __                     __         ___  ___                         
#     /\ \__                 /\ \      /'___\/\_ \                        
#     \ \ ,_\    __      ____\ \ \/'\ /\ \__/\//\ \     ___   __  __  __  
#      \ \ \/  /'__`\   /',__\\ \ , < \ \ ,__\ \ \ \   / __`\/\ \/\ \/\ \ 
#       \ \ \_/\ \L\.\_/\__, `\\ \ \\`\\ \ \_/  \_\ \_/\ \L\ \ \ \_/ \_/ \
#        \ \__\ \__/.\_\/\____/ \ \_\ \_\ \_\   /\___ \ \____/\ \___x___/'
#         \/__/\/__/\/_/\/___/   \/_/\/_/\/_/   \/____/\/___/  \/__//__/  
* VERSION
  Version 1.2

* README
  **Disclaimer** This is merely how I use org-mode, with some helper functions and keybinds.

  Smishy taskflow is my attempt to implement *GTD (getting things done)* running on Emacs with org-mode. It's meant to be very simple, very quick and completely out of the way. Ideally it is switched into view, interacted with, and switched away.

  I've found it incredibly useful - Hope you do too :)
* INSTALLATION
  Installation is easy, though you'll have to rely on your window manager to bind keys to open the taskflow frame. This is how I set it up to use its own Emacs instance.

  1. Clone this repo somewhere, I just put it in ~/.emacs.d/vendor/smishy-taskflow

  2. Create your config file. I saved it as ~/.emacs.d/smishy-taskflow-init.el. You can use sample-init.el as an example for how to create the initialiser. Set the argument to smishy-start-taskflow to the path of your todo list (it should be a .org file, you can use example-list.org to get an idea).

  3. Edit smishy-taskflow-open.sh and set the variable config_location to the full path of the new initialiser file. I use ~/.emacs.d/smishy-taskflow-init.el

  4. Key bind smishy-taskflow-open.sh to some key combo in your window manager (I use the M-~)

* USAGE
  There are lots of ways to work with org-mode, this is pretty much what I do. Honestly, while these useful functions and bindings exist, I often find myself quickly typing everything in directly, then =C-c c= 'ing to save it.

  The *FIRST STEP* before everything else below is to actually get into the Emacs frame.

  The *LAST STEP* for each of these is =C-c c= to save the list or =C-c s= to save and then hide the Emacs frame.
  
  You can also set the priority of TODO headlines with =SHIFT UP/DOWN_ARROW=, Which I use pretty extensively.
** Working
*** Start/Continue A Task
    1. =C-c h= to get into combo agenda view
    2. =n= or =p= to select the desired task from the calendar/todo list
    3. (Optional) Clock in with =I=
    4. =TAB= on task to see if there are any notes associated with it or the project
    5. (Optional) You can also clock in here with =C-c i=

*** Stop/Pause A Clocked In Task
    1. =C-c r= to jump to the currently clocked in task
    2. =C-c o= to stop the clock, to be restarted later

*** Finish A Task
    1. Locate the task using the list, =C-c h= or =C-c r=, you'll have to =TAB= on the TODO if you use =C-c h=
    2. =C-c d= to set the task to done

** Capturing Data
*** Quickly Add A TODO To List
    1. =C-c c= to get to the Next Action line
    2. Type in the actionable step of the task
    3. (Optional) =C-c C-t= to tag it
    4. (Optional) =C-c C-h= or =C-c C-d= to add schedule/deadline

*** Create A Project
    1. =C-c p= to create a Project
    2. (Optional) =C-c C-t= to add tag(s)
    3. =C-c C-c= to create a TODO in the project
    4. (Optional) =C-c C-t= to add tag(s)
    5. (Optional) =C-c C-h= or =C-c C-d= to add schedule/deadline

*** Add A TODO To A Project
    1. Navigate to the project headline
    2. =C-c C-c= to create a TODO in the project
    3. (Optional) =C-c t= to tag it
    4. (Optional) =C-c C-h= or =C-c C-d= to add schedule/deadline

*** References, Delegated Tasks, Deferred Tasks and Notes
    Because these are not nearly as frequent as standard TODO manipulation I just type them in by hand :D

** Review
*** Archiving
    You can archive by marking things then doing =B $=.
*** Daily Start
    1. =C-c h= to go to agenda view.
    2. =n= & =p= to navigate, =m= to mark tasks you want to do
    3. =B s= to schedule tasks for today

*** Daily Finish
    1. =C-c h= to go to agenda view
    2. =n= & =p= to navigate, =m= to mark DONE & DELETED tasks
    3. =B $= to archive

*** Weekly
    Cleaning up with the weekly review is not really all that automated. I just go over the todo list and manually clean things up and use =C-c n= to see what's scheduled/deadlined in the coming weeks.

    Other than that, you can jump around the agenda, mark things for archiving or archive manually from the list using =C-c $=.
    
    Just try to keep the list clean because it can grow pretty unwieldy.
** Keywords
   You can use =SHIFT LEFT/RIGHT_ARROW= to change states. DONE/TODO can be toggled with =C-c d=.
   - NEXT ACTION :: Just a place holder in the org file's work line, not really used anywhere else.
   - TODO :: The most frequent keyword, a standard TODO (actionable step).
   - DOING :: You can use this, I rarely do since I use the clock now.
   - PROJECT :: Self explanatory, headline to organise projects (anything needing more than 1 actionable step).
   - DONE :: Mark stuff you finish as DONE, it gives you excellent feedback and motivation as you see the stack of DONE items grow each day.
   - DELETED :: TODO's that you won't do should be deleted by setting this state, then they will be archived during review.
   - DEFERRED :: Mark anything you are delaying as DEFERRED.
   - DELEGATED :: Mark anything someone else is doing as DELEGATED.
   - REF :: Reference material such as links to files, locations of things, etc..
   - NOTE :: Important notes that you wont want to lose.

** Keybinds
   - =C-c C-c= :: Insert TODO Under Headline
   - =C-c C-d= :: Add/Modify Deadline
   - =C-c C-h= :: Add/Modify Schedule
   - =C-c C-t= :: Add/Modify Tags
   - =C-c C-l= :: Store Link

   - =C-c p= :: Create Project
   - =C-c c= :: Reset Work Line
   - =C-c r= :: Jump To Clocked In Task
   - =C-c a= :: Show Agenda Dispatcher
   - =C-c o= :: Clock Out Headline
   - =C-c i= :: Clock In Headline
   - =C-c d= :: Toggle DONE/TODO State
   - =C-c h= :: Show Combo Agenda View
   - =C-c t= :: Show TODO Agenda List
   - =C-c n= :: Show Agenda 2 Month Calendar
   - =C-c s= :: Save & Detach Screen
   - =C-c b= :: Switch Org Buffer
   - =C-c $= :: Archive TODO header & subtree at point
   
** Conditional Keybinds
*** Agenda View
   - =TAB= :: Switch out to any know Org Buffers if point is not on a TODO item line

* GIT
  https://github.com/quazimodo/smishy-taskflow
* LICENSE
  LGPL3
  
  Copyright Siavash S.Sajjadi 2013
  
  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 3 of the License, or (at your option) any later
  version.
  
  This library is distributed in the hope that it will be
  useful, but WITHOUT ANY WARRANTY; without even the implied
  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  PURPOSE.  See the GNU Lesser General Public License for more
  details.
  
  You should have received a copy of the  GNU Lesser General
  Public License along with this library.
  If not, see <http://www.gnu.org/licenses/>.

* CONTACT
  super.quazimodo@gmail.com

